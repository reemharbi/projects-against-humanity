{"version":3,"sources":["components/GameComponents/Lobby Components/Game/dotdotdot.svg","components/GameComponents/Lobby Components/Room.js","components/GameComponents/Lobby Components/RoomsList.js","components/GameComponents/Lobby Components/LobbyHeader/AddRoom.js","components/GameComponents/Lobby Components/LobbyHeader/RoomFilter.js","components/GameComponents/Lobby Components/LobbyHeader/LobbyHeader.js","components/GameComponents/Lobby Components/UserName.js","components/GameComponents/Lobby Components/Game/InvestorView.js","apiConfig.js","components/GameComponents/Lobby Components/api.js","components/GameComponents/Lobby Components/Game/ProjectManagerView.js","components/GameComponents/Lobby Components/Game/Waiting.js","components/GameComponents/Lobby Components/Game/Disconnected.js","components/GameComponents/Lobby Components/Game/InvestorFinalPhase.js","components/GameComponents/Lobby Components/Game/ProjectManagerFinalView.js","components/GameComponents/Lobby Components/Game/Game.js","socket.js","components/GameComponents/Lobby Components/Lobby.js","App.js","serviceWorker.js","index.js","components/GameComponents/Lobby Components/Game/pencil.svg"],"names":["module","exports","Room","Card","fluid","Content","Header","this","props","name","Meta","playerCount","extra","className","Button","color","onClick","enterRoom","roomID","Component","RoomsList","getAllRoomsAPI","socket","on","roomsList","rooms","map","room","index","Grid","Column","limit","players","length","key","_id","Container","center","columns","Row","AddRoom","Form","unstackable","Group","widths","Input","placeholder","value","roomName","onChange","e","type","style","marginLeft","addRoom","RoomFilter","val","LobbyHeader","size","onChangeAdd","onChangeFilter","Divider","hidden","UserName","class","textAlign","height","verticalAlign","maxWidth","as","fontSize","marginBottom","userName","initUser","InvestorView","updateRoom","invName","find","player","role","paddingBottom","width","card","title","paddingTop","Image","centered","src","loading","background","marginTop","apiUrl","createPlayer","axios","post","updatePlayer","id","body","patch","getAllRooms","method","url","getRoom","createRoom","ProjectManagerView","state","approachField","isSubmitted","handleChange","event","setState","target","approachSubmit","preventDefault","approach","user","then","res","console","log","emit","investor","TextArea","Waiting","dot","Disconnected","InvestorFinalPhase","winner","circular","chooseWinner","ProjectManagerFinalView","Game","currentCard","currentComponent","finalPhase","playersInRoom","updateCurrentRoom","currentUser","forEach","margin","marginRight","exitGame","endpoint","Lobby","roomsToDisplay","filterContent","currentRoom","roomsStateArray","data","newRoom","newPlayer","socketIOClient","query","userNameHandler","onChangeHandler","userID","joinedRoom","receivedRoomId","catch","err","alert","roomsFilter","newFilterValue","prevState","filteredRooms","filter","toLowerCase","includes","roomId","error","ready","bind","username","fontWeight","fontFamily","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"yHAAAA,EAAOC,QAAU,IAA0B,uC,meCGtBC,E,iLACP,IAAD,OACL,OAEI,6BACZ,kBAACC,EAAA,EAAD,CAAMC,OAAK,GACL,kBAACD,EAAA,EAAKE,QAAN,KAEE,kBAACF,EAAA,EAAKG,OAAN,KAAcC,KAAKC,MAAMC,MACzB,kBAACN,EAAA,EAAKO,KAAN,iBAAqBH,KAAKC,MAAMG,cAGlC,kBAACR,EAAA,EAAKE,QAAN,CAAcO,OAAK,GACjB,yBAAKC,UAAU,kBACb,kBAACC,EAAA,EAAD,CAAQC,MAAM,SAASC,QAAS,kBAAM,EAAKR,MAAMS,UAAU,EAAKT,MAAMU,UAAtE,qB,GAdwBC,a,kBCEbC,G,oMAMbb,KAAKC,MAAMa,mB,0CAIXd,KAAKC,MAAMc,OAAOC,GAAG,WAAahB,KAAKC,MAAMa,kB,+BAOvC,IAAD,OAGCG,EAAYjB,KAAKC,MAAMiB,MAAMC,IAAI,SAACC,EAAOC,GAC7C,OAAO,kBAACC,EAAA,EAAKC,OAAN,KAAa,kBAAC,EAAD,CAAMb,UAAW,EAAKT,MAAMS,UAAWR,KAAOkB,EAAKlB,KAAMsB,MAAOJ,EAAKI,MAAOpB,YAAcgB,EAAKK,QAAQC,OAAQC,IAAKN,EAAOV,OAAQS,EAAKQ,SAG9J,OACG,kBAACC,EAAA,EAAD,CAAWC,QAAM,GAExB,kBAACR,EAAA,EAAD,CAAMS,QAAS,GACb,kBAACT,EAAA,EAAKU,IAAN,KACCf,S,GA7BgCL,c,kBCDlBqB,G,wLACP,IAAD,OACL,OACI,kBAACJ,EAAA,EAAD,CAAWC,QAAM,GAM7B,kBAACI,EAAA,EAAD,CAAMC,aAAW,GACb,kBAACD,EAAA,EAAKE,MAAN,CAAYC,OAAQ,GAClB,kBAACH,EAAA,EAAKI,MAAN,CAAYC,YAAY,gBAAgBjC,UAAU,SAASkC,MAAOxC,KAAKC,MAAMwC,SAAUC,SAAU,SAACC,GAAD,OAAO,EAAK1C,MAAMyC,SAASC,OAE9H,kBAACpC,EAAA,EAAD,CAAQqC,KAAK,SAASC,MAAO,CAACrC,MAAM,QAASsC,WAAW,SAAWtC,MAAM,SAASC,QAAU,SAACkC,GAAD,OAAO,EAAK1C,MAAM8C,QAAQJ,KAAtH,gB,GAbiC/B,cCDhBoC,E,iLACP,IAAD,OACL,OACI,kBAACnB,EAAA,EAAD,CAAWC,QAAM,GAE7B,kBAACI,EAAA,EAAD,CAAMC,aAAW,GACb,kBAACD,EAAA,EAAKE,MAAN,CAAYC,OAAQ,GAClB,kBAACH,EAAA,EAAKI,MAAN,CAAYC,YAAY,gBAAgBC,MAAOxC,KAAKC,MAAMgD,IAAKP,SAAU,SAACC,GAAD,OAAO,EAAK1C,MAAMyC,SAASC,a,GAPlE/B,aCEnBsC,E,iLAEb,OACI,kBAAChB,EAAA,EAAD,CAAMiB,KAAK,QAAQxB,IAAI,SACvB,kBAACO,EAAA,EAAKE,MAAN,CAAYC,OAAO,SACjB,kBAAC,EAAD,CAASK,SAAU1C,KAAKC,MAAMmD,YAAaL,QAAS/C,KAAKC,MAAM8C,QAASN,SAAUzC,KAAKC,MAAMwC,WAC7F,kBAAC,EAAD,CAAaC,SAAU1C,KAAKC,MAAMoD,eAAgBJ,IAAKjD,KAAKC,MAAMgD,OAEpE,kBAACK,EAAA,EAAD,CAASC,QAAM,S,GARc3C,a,SCDpB4C,G,wLACP,IAAD,OAEL,OACR,yBAAKC,MAAM,QACX,wBAAIA,MAAM,WACV,6BACoB,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,8BAOpB,kBAACnC,EAAA,EAAD,CAAMoC,UAAU,SAASb,MAAO,CAAEc,OAAQ,QAASC,cAAc,UAC7D,kBAACtC,EAAA,EAAKC,OAAN,CAAasB,MAAO,CAAEgB,SAAU,MAC9B,kBAAC9D,EAAA,EAAD,CAAQ+D,GAAG,IAAIjB,MAAO,CAAEkB,SAAU,OAAQC,aAAc,SAAUN,UAAU,UAA5E,4BAGA,kBAACxB,EAAA,EAAD,CAAMiB,KAAK,SACP,kBAACjB,EAAA,EAAKI,MAAN,CAAYE,MAAOxC,KAAKC,MAAMgE,SAAU1B,YAAY,YAAYG,SAAU,SAACC,GAAD,OAAO,EAAK1C,MAAMyC,SAASC,MACrG,kBAACpC,EAAA,EAAD,CAAQC,MAAM,SAASqC,MAAO,CAACrC,MAAM,SAAU2C,KAAK,QAAQP,KAAK,SAASnC,QAAU,SAACkC,GAAD,OAAO,EAAK1C,MAAMiE,SAASvB,KAA/G,iB,GA9B4B/B,c,uDCMjBuD,E,4LAEbnE,KAAKC,MAAMc,OAAOC,GAAG,WAAahB,KAAKC,MAAMmE,WAAWpE,KAAKC,MAAMmB,KAAKQ,Q,+BAGxE,IAAMyC,EAAUrE,KAAKC,MAAMmB,KAAKK,QAAQ6C,KAAK,SAAAC,GAAM,MAAoB,QAAhBA,EAAOC,OAAgBtE,KAC9E,OACI,6BACR,kBAACoB,EAAA,EAAD,KACA,kBAACA,EAAA,EAAKU,IAAN,CAAUD,QAAS,EAAGc,MAAO,CAAC4B,cAAe,QAC3C,kBAACnD,EAAA,EAAKC,OAAN,CAAamD,MAAO,GACd,yBAAKpE,UAAU,YACX,kBAACV,EAAA,EAAD,CAAMU,UAAU,oCACZ,yBAAKA,UAAU,0BAA0BN,KAAKC,MAAM0E,KAAKC,UAIvE,kBAACtD,EAAA,EAAKC,OAAN,CAAamD,MAAO,GACpB,kBAACpD,EAAA,EAAKU,IAAN,CAAUa,MAAO,CAACa,UAAU,UAAW3B,QAAS,GAChD,4BAAKsC,GACL,wBAAIxB,MAAO,CAACrC,MAAM,UAAlB,aAEA,kBAACc,EAAA,EAAKU,IAAN,CAAUa,MAAO,CAACa,UAAU,UAAW3B,QAAS,GAC1C,uBAAGzB,UAAU,wBAAb,8DAKR,kBAACgB,EAAA,EAAKU,IAAN,CAAUD,QAAS,EAAGc,MAAO,CAAC4B,cAAe,MAAOI,WAAY,MAAOlB,OAAQ,SAE3E,kBAACrC,EAAA,EAAKC,OAAN,KACI,6BACI,kBAAC3B,EAAA,EAAD,CAAMiD,MAAO,CAAC4B,cAAe,OAAQnE,UAAU,+BAC/C,kBAACwE,EAAA,EAAD,CAAQC,UAAQ,EAACC,IAAKC,IAAS9B,KAAK,QAAQN,MAAO,CAACqC,WAAW,sBAAuBC,UAAU,aAIzG,kBAAC7D,EAAA,EAAKC,OAAN,KACK,6BACI,kBAAC3B,EAAA,EAAD,CAAMiD,MAAO,CAAC4B,cAAe,OAASnE,UAAU,+BAChD,kBAACwE,EAAA,EAAD,CAAQC,UAAQ,EAACC,IAAKC,IAAS9B,KAAK,QAAQN,MAAO,CAACqC,WAAW,sBAAuBC,UAAU,eAOxG,yBAAK1B,MAAM,OACX,yBAAKA,MAAM,WACX,yBAAKA,MAAM,gB,GAjDuB7C,a,0BCT1BwE,EADD,sDCcFC,EAAe,SAACd,GAAD,OACxBe,IAAMC,KAAN,UAAeH,EAAf,YAAkCb,IAEzBiB,EAAe,SAACC,EAAIC,GAC9B,OAAOJ,IAAMK,MAAN,UAAgBP,EAAhB,oBAAkCK,GAAMC,IAYrCE,EAAc,kBACvBN,IAAM,CACFO,OAAQ,MACRC,IAAI,GAAD,OAAKV,EAAL,aAEEW,EAAU,SAACN,GAAD,OACnBH,IAAM,CACFO,OAAQ,MACRC,IAAI,GAAD,OAAKV,EAAL,kBAAqBK,MAEnBO,EAAa,SAAC5E,GAAD,OACtBkE,IAAMC,KAAN,UAAeH,EAAf,UAAgChE,ICnCf6E,E,2MAEjBC,MAAQ,CACJC,cAAe,GACfC,aAAa,G,EAGjBC,aAAe,SAACC,GACZ,EAAKC,SAAS,CACVJ,cAAeG,EAAME,OAAOhE,S,EAMpCiE,eAAiB,SAACjE,GACdA,EAAMkE,iBACN,IAAMhB,EAAO,CAACiB,SAAU,EAAKT,MAAMC,eAEnCX,EAAa,EAAKvF,MAAM2G,KAAKhF,IAAM8D,GAAMmB,KAAM,SAAAC,GAC3CC,QAAQC,IAAI,kBAAkBF,GAC9B,EAAK7G,MAAMc,OAAOkG,KAAK,iBAAmB,EAAKhH,MAAMmB,QAEjE,EAAKmF,SAAS,CAACH,aAAY,K,wEAQb,IAAD,OAEL,OACI,yBAAK9F,UAAU,OAAOuC,MAAO,CAACc,OAAO,SAC7C,kBAACrC,EAAA,EAAD,KACA,kBAACA,EAAA,EAAKU,IAAN,CAAUD,QAAS,EAAGc,MAAO,CAAC4B,cAAe,QAC3C,kBAACnD,EAAA,EAAKC,OAAN,CAAamD,MAAO,GACd,yBAAKpE,UAAU,YACX,kBAACV,EAAA,EAAD,CAAMU,UAAU,oCACZ,yBAAKA,UAAU,0BAA0BN,KAAKC,MAAM0E,KAAKC,UAIvE,kBAACtD,EAAA,EAAKC,OAAN,CAAamD,MAAO,GAChB,kBAACpD,EAAA,EAAKU,IAAN,CAAUa,MAAO,CAACa,UAAU,UAAW3B,QAAS,GAC/C/B,KAAKC,MAAMiH,UAAY,4BAAKlH,KAAKC,MAAMiH,SAAShH,MACrD,wBAAI2C,MAAO,CAACrC,MAAM,UAAlB,aAEA,kBAACc,EAAA,EAAKU,IAAN,CAAUD,QAAS,EAAGzB,UAAU,eAAeuC,MAAO,CAACa,UAAU,WACjE,uBAAGpD,UAAU,wBAAb,2CAKF,kBAACgB,EAAA,EAAKU,IAAN,CAAUa,MAAO,CAAC4B,cAAe,MAAOI,WAAY,MAAOlB,OAAO,QAC9D,kBAACrC,EAAA,EAAKC,OAAN,KACI,gCAKR,kBAACD,EAAA,EAAKU,IAAN,CAAUD,QAAS,EAAGc,MAAO,CAAC4B,cAAe,MAAOI,WAAY,MAAOlB,OAAQ,SAC3E,kBAACrC,EAAA,EAAKC,OAAN,KACI,6BACI,kBAAC3B,EAAA,EAAD,CAAMiD,MAAO,CAAC4B,cAAe,OAAQnE,UAAU,6BAC7CN,KAAKkG,MAAME,aACb,kBAAClE,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKiF,SAAN,CAAe3E,MAAOxC,KAAKkG,MAAMC,cAAezD,SAAU,SAACC,GAAD,OAAO,EAAK0D,aAAa1D,IAAIJ,YAAY,yCACnG,kBAACL,EAAA,EAAK3B,OAAN,CAAaE,QAAST,KAAKyG,gBAA3B,WAGHzG,KAAKkG,MAAME,aACZ,6BAAMpG,KAAKkG,MAAMC,kBAM1B,kBAAC7E,EAAA,EAAKC,OAAN,KACK,6BACI,kBAAC3B,EAAA,EAAD,CAAMiD,MAAO,CAAC4B,cAAe,OAAQnE,UAAU,+BAC/C,kBAACwE,EAAA,EAAD,CAAQC,UAAQ,EAACC,IAAKC,IAAS9B,KAAK,QAAQN,MAAO,CAACqC,WAAW,sBAAuBC,UAAU,eASxG,yBAAK1B,MAAM,OACX,yBAAKA,MAAM,WACX,yBAAKA,MAAM,gB,GA7F6B7C,a,kCCA3BwG,E,iLAGb,OACI,yBAAKvE,MAAO,CAACc,OAAO,SACpB,yBAAKF,MAAM,OACX,yBAAKA,MAAM,WACX,yBAAKA,MAAM,WACX,yBAAKnD,UAAU,WAEvB,uDACI,kBAACwE,EAAA,EAAD,CAAOE,IAAKqC,IAAKlE,KAAK,QAAQN,MAAO,CAACC,WAAW,WACrD,+BAAK9C,KAAKC,MAAMmB,KAAKK,QAAQC,OAA7B,IAAsC1B,KAAKC,MAAMmB,KAAKI,MAAtD,Y,GAZiCZ,aCHhB0G,G,wLAEb,OACI,yBAAKhH,UAAU,mBACf,0DACA,sD,GAL8BM,cCErB2G,E,2MAEjBrB,MAAQ,CACJsB,OAAQ,I,4EAICA,GACTxH,KAAKC,MAAMc,OAAOkG,KAAK,aAAeO,EAASxH,KAAKC,MAAMmB,Q,0CAM1C,IAAD,OACfpB,KAAKC,MAAMc,OAAOC,GAAG,aAAe,SAACwG,GAEjC,EAAKjB,SAAS,CACViB,OAAO,iBAAD,OAAmBA,EAAOtH,KAA1B,a,+BAQR,IAAD,OACL,OACI,6BACI,2BAAIF,KAAKkG,MAAMsB,QAC3B,kBAAClG,EAAA,EAAD,CAAMS,QAAS,GACf,kBAACT,EAAA,EAAKU,IAAN,CAAUa,MAAO,CAAC4B,cAAe,QAC/B,kBAACnD,EAAA,EAAKC,OAAN,KACM,yBAAKjB,UAAU,YACX,kBAACV,EAAA,EAAD,CAAMU,UAAU,oCACZ,yBAAKA,UAAU,0BAA0BN,KAAKC,MAAM0E,KAAKC,UAIvE,kBAACtD,EAAA,EAAKC,OAAN,KACA,kBAACuD,EAAA,EAAD,CAAOC,UAAQ,EAAClC,MAAO,CAACsC,UAAU,QAASH,IAAI,kEAAkE7B,KAAK,OAAOsE,UAAQ,MAIvI,kBAACnG,EAAA,EAAKU,IAAN,CAAUa,MAAO,CAAC4B,cAAe,MAAOI,WAAY,QAChD,kBAACvD,EAAA,EAAKC,OAAN,KACI,yBAAKsB,MAAO,CAACc,OAAO,UAGxB,kBAACrC,EAAA,EAAKC,OAAN,KACI,uBAAGjB,UAAU,gCAAb,aAGR,kBAACgB,EAAA,EAAKU,IAAN,CAAUa,MAAO,CAAC4B,cAAe,MAAOI,WAAY,MAAOlB,OAAO,QAC9D,kBAACrC,EAAA,EAAKC,OAAN,KACI,yBAAKd,QAAS,SAAC+G,GAAD,OAAY,EAAKE,aAAa,EAAKzH,MAAMwB,QAAQ,MAC3D,kBAAC7B,EAAA,EAAD,CAAMiD,MAAO,CAAC4B,cAAe,OAAQnE,UAAU,4BAC/C,6BAAMN,KAAKC,MAAMwB,QAAQ,GAAGkF,aAIrC,kBAACrF,EAAA,EAAKC,OAAN,KACK,+BAGL,kBAACD,EAAA,EAAKC,OAAN,KACK,yBAAKd,QAAS,SAAC+G,GAAD,OAAY,EAAKE,aAAa,EAAKzH,MAAMwB,QAAQ,MAC3D,kBAAC7B,EAAA,EAAD,CAAMiD,MAAO,CAAC4B,cAAe,OAAQnE,UAAU,+BAE/C,6BAAMN,KAAKC,MAAMwB,QAAQ,GAAGkF,eASpC,yBAAKlD,MAAM,OACX,yBAAKA,MAAM,WACX,yBAAKA,MAAM,gB,GAhF6B7C,aCA3B+G,E,2MAIjBzB,MAAQ,CACJsB,OAAQ,I,mFAIQ,IAAD,OACfxH,KAAKC,MAAMc,OAAOC,GAAG,aAAe,SAACwG,GAEjC,EAAKjB,SAAS,CACViB,OAAO,iBAAD,OAAmBA,EAAOtH,KAA1B,a,+BAQd,OACI,6BACI,2BAAIF,KAAKkG,MAAMsB,QAE3B,kBAAClG,EAAA,EAAD,CAAMS,QAAS,GACf,kBAACT,EAAA,EAAKU,IAAN,CAAUa,MAAO,CAAC4B,cAAe,QAC/B,kBAACnD,EAAA,EAAKC,OAAN,KACM,yBAAKjB,UAAU,YACX,kBAACV,EAAA,EAAD,CAAMU,UAAU,oCACZ,yBAAKA,UAAU,0BAA0BN,KAAKC,MAAM0E,KAAKC,UAIvE,kBAACtD,EAAA,EAAKC,OAAN,KACA,kBAACuD,EAAA,EAAD,CAAOC,UAAQ,EAAClC,MAAO,CAACsC,UAAU,QAASH,IAAI,kEAAkE7B,KAAK,OAAOsE,UAAQ,MAIvI,kBAACnG,EAAA,EAAKU,IAAN,CAAUa,MAAO,CAAC4B,cAAe,MAAOI,WAAY,QAChD,kBAACvD,EAAA,EAAKC,OAAN,KACI,yBAAKsB,MAAO,CAACc,OAAO,UAGxB,kBAACrC,EAAA,EAAKC,OAAN,KACI,uBAAGjB,UAAU,gCAAb,aAGR,kBAACgB,EAAA,EAAKU,IAAN,CAAUa,MAAO,CAAC4B,cAAe,MAAOI,WAAY,MAAOlB,OAAO,QAC9D,kBAACrC,EAAA,EAAKC,OAAN,KACI,6BACI,kBAAC3B,EAAA,EAAD,CAAMiD,MAAO,CAAC4B,cAAe,OAAQnE,UAAU,4BAC/C,2BAAIN,KAAKC,MAAMwB,QAAQ,GAAGkF,aAInC,kBAACrF,EAAA,EAAKC,OAAN,KACK,+BAGL,kBAACD,EAAA,EAAKC,OAAN,KACK,6BACI,kBAAC3B,EAAA,EAAD,CAAMiD,MAAO,CAAC4B,cAAe,OAAQnE,UAAU,+BAE/C,2BAAIN,KAAKC,MAAMwB,QAAQ,GAAGkF,eASlC,yBAAKlD,MAAM,OACX,yBAAKA,MAAM,WACX,yBAAKA,MAAM,gB,GA3EkC7C,aCKhCgH,E,2MAEnB1B,MAAQ,CACN2B,YAAa,KACbC,iBAAkB,UAClBC,YAAY,EACZC,cAAe,GACfd,SAAU,M,mFAQS,IAAD,OAGlBlH,KAAKC,MAAMc,OAAOC,GAAG,oBAAqB,SAACL,GAAD,OAAY,EAAKV,MAAMgI,kBAAkBtH,KAEnFX,KAAKC,MAAMc,OAAOC,GAAG,YAAc,SAAC2D,GAClC,IAAIuD,EAAc,KAClB,EAAKjI,MAAMmB,KAAKK,QAAQ0G,QAAS,SAAC5D,GACR,QAAhBA,EAAOC,MACT,EAAK+B,SAAS,CACZW,SAAU3C,IAGdwC,QAAQC,IAAI,oBAAsBzC,EAAS,OAEzCA,EAAO3C,MAAQ,EAAK3B,MAAM2G,KAAKhF,MACnCsG,EAAc3D,KAGlBwC,QAAQC,IAAI,kBAAoBkB,GAEP,QAArBA,EAAY1D,KACd,EAAK+B,SAAS,CACZsB,YAAalD,EACbmD,iBAAkB,aAKpB,EAAKvB,SAAS,CACZsB,YAAalD,EACbmD,iBAAkB,sBAOxB9H,KAAKC,MAAMc,OAAOC,GAAG,aAAe,SAACS,GACnC,EAAK8E,SAAS,CACZyB,cAAevG,EACfsG,YAAY,Q,+BAahB,OAAI/H,KAAKkG,MAAM6B,WAEmB,aAAhC/H,KAAKkG,MAAM4B,iBACN,6BACP,kBAAC,EAAD,CAAoB1G,KAAMpB,KAAKC,MAAMmB,KAAML,OAAQf,KAAKC,MAAMc,OAAQU,QAASzB,KAAKkG,MAAM8B,cAAerD,KAAM3E,KAAKkG,MAAM2B,cAC1H,yBAAKhF,MAAO,CAAC6B,MAAM,QAAS0D,OAAQ,aACxC,kBAAC7H,EAAA,EAAD,CAAQC,MAAM,SAASqC,MAAO,CAACrC,MAAM,QAAS2E,UAAU,OAAQkD,YAAa,QAAS/H,UAAU,8BAA8BG,QAAST,KAAKC,MAAMqI,UAAlJ,eAMW,6BACJ,kBAAC,EAAD,CAAyBvH,OAAQf,KAAKC,MAAMc,OAAQU,QAASzB,KAAKkG,MAAM8B,cAAerD,KAAM3E,KAAKkG,MAAM2B,cACxG,yBAAKhF,MAAO,CAAC6B,MAAM,QAAS0D,OAAQ,aACnC,kBAAC7H,EAAA,EAAD,CAAQC,MAAM,SAASqC,MAAO,CAACrC,MAAM,QAAS2E,UAAU,OAAQkD,YAAa,QAAS/H,UAAU,8BAA8BG,QAAST,KAAKC,MAAMqI,UAAlJ,eAY8B,aAAhCtI,KAAKkG,MAAM4B,iBACN,6BACH,kBAAC,EAAD,CAAUQ,SAAUtI,KAAKC,MAAMqI,SAAU3D,KAAM3E,KAAKkG,MAAM2B,YAAazG,KAAMpB,KAAKC,MAAMmB,KAAMgD,WAAYpE,KAAKC,MAAMmE,WAAYrD,OAAQf,KAAKC,MAAMc,SACpJ,yBAAK8B,MAAO,CAAC6B,MAAM,QAAS0D,OAAQ,aAEpC,kBAAC7H,EAAA,EAAD,CAAQC,MAAM,SAASqC,MAAO,CAACrC,MAAM,QAAS2E,UAAU,OAAQkD,YAAa,QAAS/H,UAAU,8BAA8BG,QAAST,KAAKC,MAAMqI,UAAlJ,eAIqC,oBAAhCtI,KAAKkG,MAAM4B,iBACX,6BACL,kBAAC,EAAD,CAAgBZ,SAAUlH,KAAKkG,MAAMgB,SAAUoB,SAAUtI,KAAKC,MAAMqI,SAAU3D,KAAM3E,KAAKkG,MAAM2B,YAAazG,KAAMpB,KAAKC,MAAMmB,KAAMgD,WAAYpE,KAAKC,MAAMmE,WAAYrD,OAAQf,KAAKC,MAAMc,OAAQ6F,KAAM5G,KAAKC,MAAM2G,OAClN,yBAAK/D,MAAO,CAAC6B,MAAM,QAAS0D,OAAQ,aACpC,kBAAC7H,EAAA,EAAD,CAAQC,MAAM,SAASqC,MAAO,CAACrC,MAAM,QAAS2E,UAAU,OAAQkD,YAAa,QAAS/H,UAAU,8BAA8BG,QAAST,KAAKC,MAAMqI,UAAlJ,eAMoC,YAAhCtI,KAAKkG,MAAM4B,iBAET,oCACR,6BACE,kBAAC,EAAD,CAASQ,SAAUtI,KAAKC,MAAMqI,SAAUlH,KAAMpB,KAAKC,MAAMmB,QAEzD,6BACA,yBAAKyB,MAAO,CAACc,OAAO,QAASe,MAAM,QAAS0D,OAAQ,aACpD,kBAAC7H,EAAA,EAAD,CAAQC,MAAM,SAASqC,MAAO,CAACrC,MAAM,QAAS2E,UAAU,OAAQkD,YAAa,QAAS/H,UAAU,8BAA8BG,QAAST,KAAKC,MAAMqI,UAAlJ,gBAKiC,wBAAhCtI,KAAKkG,MAAM4B,iBACX,kBAAC,EAAD,WADJ,M,GAhI6BlH,a,kBCPnB2H,EAFE,yBCiBIC,G,mBAGjB,WAAYvI,GAAQ,IAAD,8BACf,4CAAMA,KAQViG,MAAQ,CACJhF,MAAO,GACPuH,eAAgB,GAChBhG,SAAU,GACVmE,KAAM,KACN3C,SAAU,GACV6D,iBAAkB,OAClBtD,MAAM,EACNkE,cAAe,GACfC,YAAa,MAlBE,EA0BnB7H,eAAiB,WACb8E,IAAciB,KAAK,SAAAC,GAEf,IAAM8B,EAAkB9B,EAAI+B,KAAK3H,MACjC,EAAKqF,SAAS,CACVrF,MAAO0H,EACPH,eAAgBG,OAhCT,EA6CnB7F,QAAU,SAACP,GACPA,EAAMkE,iBACN,IAAMoC,EAAU,CACZ5I,KAAM,EAAKgG,MAAMzD,SACjBhB,QAAS,CAAC,CAAE,IAAO,EAAKyE,MAAMU,KAAKhF,OAIvCoE,EAAW8C,GAASjC,KAAK,SAAAC,GACrB,EAAKP,SAAS,CACVoC,YAAa7B,EAAI+B,KAAKzH,KACtB0G,iBAAkB,OAClBrF,SAAU,KAEd,EAAK1B,OAAOkG,KAAK,gBAAiBH,EAAI+B,KAAKzH,KAAKQ,KAChD,EAAKd,oBA5DM,EAiEnBoD,SAAW,SAAC1B,GACRA,EAAMkE,iBAEN,IAAMqC,EAAY,CAAE7I,KAAM,EAAKgG,MAAMjC,UAErCoB,EAAa0D,GAAWlC,KAAK,SAAAC,GACzB,EAAKP,SAAS,CAAEK,KAAME,EAAI+B,KAAKtE,SAC/B,EAAKxD,OAASiI,IAAeT,EAAU,CAAEU,MAAM,UAAD,OAAY,EAAK/C,MAAMU,KAAKhF,OAE1E,EAAK2E,SAAS,CACVuB,iBAAkB,YA3EX,EAiFnBoB,gBAAkB,SAACvG,GACf,EAAK4D,SAAS,CAEVtC,SAAUtB,EAAE6D,OAAOhE,QAEvBuE,QAAQC,IAAI,IAAK,EAAKd,MAAMjC,WAtFb,EA2FnBkF,gBAAkB,SAACxG,GACf,EAAK4D,SAAS,CACV9D,SAAUE,EAAE6D,OAAOhE,QAEvBuE,QAAQC,IAAI,EAAKd,MAAMzD,WA/FR,EAmGnB/B,UAAY,SAACC,GACToG,QAAQC,IAAI,UAAWrG,GACvB,EAAKI,OAAOkG,KAAK,WAAY,CAAEtG,OAAQA,EAAQyI,OAAQ,EAAKlD,MAAMU,KAAKhF,MAEvE,IAAIyH,EAAa,KAGjB,EAAKtI,OAAOC,GAAG,mBAAoB,SAACsI,GAEhCvD,EAAQpF,GAAQkG,KAAK,SAAAC,GACjBuC,EAAavC,EAAI+B,KAAKzH,KACtB2F,QAAQC,IAAI,qBAAsBqC,GAClC,EAAK9C,SAAS,CACVuB,iBAAkB,OAClBa,YAAaU,MAGlBE,MAAM,SAAAC,GACLzC,QAAQC,IAAIwC,OAMpB,EAAKzI,OAAOC,GAAG,qBAAsB,WACjCyI,MAAM,gCA5HK,EAoInBnB,SAAW,WAGP,EAAKvH,OAAOkG,KAAK,iBAAkB,CAAEtG,OAAQ,EAAKuF,MAAMyC,YAAY/G,IAAKwH,OAAQ,EAAKlD,MAAMU,KAAKhF,MAGjG,EAAK2E,SAAS,CACVuB,iBAAkB,OAClBa,YAAa,QA5IF,EAgJnBe,YAAc,SAAC/G,GACX,IAAMgH,EAAiBhH,EAAE6D,OAAOhE,MAEhC,EAAK+D,SAAS,SAACqD,EAAW3J,GACtB,IAAM4J,EAAgBD,EAAU1I,MAAM4I,OAAO,SAAA1I,GACzC,OAAOA,EAAKlB,KAAK6J,cAAcC,SAASL,EAAeI,iBAE3D,MAAO,CACHrB,cAAeiB,EACflB,eAAgBoB,MAzJT,EAgKnBzF,WAAa,SAACzD,GACV,IAAI0I,EAAa,KACjBtD,EAAQpF,GAAQkG,KAAK,SAAAC,GACjBC,QAAQC,IAAI,mCAAoCF,EAAI+B,KAAKzH,MACzDiI,EAAavC,EAAI+B,KAAKzH,KACtB,EAAKmF,SAAS,CACVoC,YAAaU,MAGlBE,MAAM,SAAAC,GACLzC,QAAQC,IAAIwC,MA1KD,EA+KfvB,kBAAoB,SAACgC,GAEjBlD,QAAQC,IAAI,kCAAmCiD,GAC/ClE,EAAQkE,GAAQpD,KAAK,SAAAC,GACjB,EAAKP,SAAS,CACVoC,YAAa7B,EAAI+B,KAAKzH,OAE1B,IAAMwF,EAAO,EAAKV,MAAMyC,YAAYlH,QAAQ6C,KAAK,SAACC,GAC9C,OAAOA,EAAO3C,MAAQ,EAAKsE,MAAMU,KAAKhF,MAE1CmF,QAAQmD,MAAM,iBAAkBtD,GAE5B,EAAKV,MAAMyC,YAAYlH,QAAQC,SAAW,EAAKwE,MAAMyC,YAAYnH,OAChEoF,EAAKuD,QACFpD,QAAQmD,MAAMtD,EAAK1G,KAAM,cAE7BsF,EAAaoB,EAAKhF,IAAK,CAAEuI,OAAO,IAAQtD,KAAK,SAAAC,GACzCC,QAAQmD,MAAMtD,EAAK1G,KAAM,aACzB,EAAKa,OAAOkG,KAAK,gBAAiB,EAAKf,MAAMyC,mBA/L7D,EAAKO,gBAAkB,EAAKA,gBAAgBkB,KAArB,gBACvB,EAAKrJ,OAAS,KAHC,E,yHAwCff,KAAKc,mB,+BAkKL,IAAMuJ,EAAWrK,KAAKkG,MAAMU,MAAQ5G,KAAKkG,MAAMU,KAAK1G,KAGpD,MAAoC,SAAhCF,KAAKkG,MAAM4B,iBACH,6BACJ,kBAAC,EAAD,CAAU7D,SAAUjE,KAAKkG,MAAMjC,SAAUvB,SAAU1C,KAAKkJ,gBAAiBhF,SAAUlE,KAAKkE,YAErD,SAAhClE,KAAKkG,MAAM4B,iBAEd,kBAACjG,EAAA,EAAD,CAAWC,QAAM,GACjB,yBAAK2B,MAAM,OACX,yBAAKA,MAAM,WACX,yBAAKA,MAAM,WACP,kBAACnC,EAAA,EAAD,CAAMoC,UAAU,SAASb,MAAO,CAAEsC,UAAW,OAAQ3E,MAAO,QAAS8J,WAAY,OAAQtG,aAAc,OAAQD,SAAU,OAAQwG,WAAY,mBAAsB3G,cAAc,UAAjL,WAAmMyG,EAAnM,MACA,kBAAC,EAAD,CAAa5H,SAAUzC,KAAKkG,MAAMzD,SAAUW,YAAapD,KAAKmJ,gBAAiBpG,QAAS/C,KAAK+C,QAASM,eAAgBrD,KAAK0J,YAAazG,IAAKjD,KAAKkG,MAAMwC,gBACxJ,kBAAC,EAAD,CAAWxH,MAAOlB,KAAKkG,MAAMuC,eAAgB/H,UAAWV,KAAKU,UAAWK,OAAQf,KAAKe,OAAQD,eAAgBd,KAAKc,kBAOrF,SAAhCd,KAAKkG,MAAM4B,iBAER,6BACJ,kBAAC,EAAD,CAAMlB,KAAM5G,KAAKkG,MAAMU,KAAM0B,SAAUtI,KAAKsI,SAAUlH,KAAMpB,KAAKkG,MAAMyC,YAAa5H,OAAQf,KAAKe,OAAQqD,WAAYpE,KAAKoE,WAAY6D,kBAAmBjI,KAAKiI,0BAHjK,M,GAnOsBrH,cCbd4J,E,iLAGjB,OACE,kBAAC,EAAD,U,GAJ2B5J,aCOb6J,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAchB,MAAMtD,KAAK,SAAAuE,GACjCA,EAAaC,gB,wCEnInB5L,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.0403e78d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dotdotdot.d109cdd0.svg\";","import React, { Component } from 'react'\nimport { Button, Card } from 'semantic-ui-react'\n\nexport default class Room extends Component {\n    render() {\n        return (\n\n            <div>\n<Card fluid>\n      <Card.Content>\n      \n        <Card.Header>{this.props.name}</Card.Header>\n        <Card.Meta>Players: {this.props.playerCount}</Card.Meta>\n       \n      </Card.Content>\n      <Card.Content extra>\n        <div className='ui two buttons'>\n          <Button color='violet' onClick={() => this.props.enterRoom(this.props.roomID)}>\n            Join Room\n          </Button>\n        \n        </div>\n      </Card.Content>\n    </Card>       \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Room from './Room'\nimport { Container, Grid } from 'semantic-ui-react'\nimport './RoomList.css'\n\nexport default class RoomsList extends Component {\n\n\n   \n    \n    componentWillMount(){\n        this.props.getAllRoomsAPI();\n    }\n    componentDidMount(){\n\n        this.props.socket.on(\"updateDB\" , this.props.getAllRoomsAPI )\n\n\n    }\n\n\n\n    render() {\n\n\n        const roomsList = this.props.rooms.map((room , index) => {\n          return <Grid.Column><Room enterRoom={this.props.enterRoom} name= {room.name} limit={room.limit} playerCount= {room.players.length} key={index} roomID={room._id}/></Grid.Column>\n        })\n\n        return (\n           <Container center>\n\n    <Grid columns={1}>\n      <Grid.Row >\n      {roomsList}\n      </Grid.Row>\n    </Grid>\n\n    \n\n    {/* Heads up! Override division color to make it visible on dark background. */}\n             \n    </Container>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Button, Form, Container } from 'semantic-ui-react'\nimport './AddRoom.css'\n\nexport default class AddRoom extends Component {\n    render() {\n        return (\n            <Container center>\n\n\n\n\n\n<Form unstackable>\n    <Form.Group widths={1}>\n      <Form.Input placeholder='Create a room' className='create' value={this.props.roomName} onChange={(e) => this.props.onChange(e)} />\n    </Form.Group>\n    <Button type='submit' style={{color:'black', marginLeft:'110px' }} color='yellow' onClick={ (e) => this.props.addRoom(e)}>Create</Button>\n  </Form>\n\n\n                \n  </Container>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {  Form, Container } from 'semantic-ui-react'\n\nexport default class RoomFilter extends Component {\n    render() {\n        return (\n            <Container center>\n\n<Form unstackable>\n    <Form.Group widths={1}>\n      <Form.Input placeholder='Search a room' value={this.props.val} onChange={(e) => this.props.onChange(e)} />\n    </Form.Group>\n  </Form>\n                \n  </Container>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Divider, Form } from 'semantic-ui-react'\nimport AddRoom from './AddRoom';\nimport RoomFilter from './RoomFilter';\n\nexport default class LobbyHeader extends Component {\n    render() {\n        return (\n            <Form size=\"small\" key=\"small\">\n            <Form.Group widths='equal'>\n              <AddRoom onChange={this.props.onChangeAdd} addRoom={this.props.addRoom} roomName={this.props.roomName}/>\n              <RoomFilter  onChange={this.props.onChangeFilter} val={this.props.val}/>\n            </Form.Group>\n            <Divider hidden />\n          </Form>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Button, Form, Grid, Header } from 'semantic-ui-react'\nimport './UserName.css'\n\nexport default class UserName extends Component {\n    render() {\n      \n        return (\n<div class=\"area\" >\n<ul class=\"circles\">\n<li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n          </ul>\n\n\n\n\n\n<Grid textAlign='center' style={{ height: '90vh'}} verticalAlign='middle'>\n    <Grid.Column style={{ maxWidth: 600 }}>\n      <Header as='p' style={{ fontSize: '5rem', marginBottom: '10rem'}} textAlign='center'>\n      What should we call you?\n      </Header>\n      <Form size='large'>\n          <Form.Input value={this.props.userName} placeholder='John Doe?' onChange={(e) => this.props.onChange(e)}/>\n          <Button color='yellow' style={{color:'black'}} size='large' type=\"submit\" onClick={ (e) => this.props.initUser(e)}>\n            Enter\n          </Button>\n      </Form>\n   \n    </Grid.Column>\n  </Grid>\n  \n \n  </div >\n\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Card, Grid, Image } from 'semantic-ui-react'\nimport './InvestorView.css'\nimport './AnimatedBG.css'\nimport './Animations.css'\nimport './Notepaper.css'\nimport loading from './pencil.svg'\n\n\n\nexport default class InvestorView extends Component {\n    componentDidMount(){\n        this.props.socket.on(\"updateDB\" , this.props.updateRoom(this.props.room._id) )\n    }\n    render() {\n        const invName = this.props.room.players.find(player => player.role === 'inv').name\n        return (\n            <div>\n    <Grid >\n    <Grid.Row columns={3} style={{paddingBottom: '0px'}}>\n      <Grid.Column width={4}>\n            <div className='card-div'>\n                <Card className=\"project-card flip-vertical-right\">\n                    <div className=\"project-text text-flip\">{this.props.card.title}</div>\n                </Card>\n            </div>\n      </Grid.Column>\n      <Grid.Column width={9}>\n      <Grid.Row style={{textAlign:'center'}} columns={1} >\n      <h1>{invName}</h1>\n      <h3 style={{color:'white'}}>Investor</h3>\n      </Grid.Row>\n      <Grid.Row style={{textAlign:'center'}} columns={1} >\n            <p className='fade-in-fwd sentence'>*playing solitaire while waiting for project proposals*</p>\n      </Grid.Row>\n      </Grid.Column>\n    </Grid.Row>\n\n    <Grid.Row columns={2} style={{paddingBottom: '0px', paddingTop: '0px', height: '50vh'}}> \n    \n        <Grid.Column>\n            <div>\n                <Card style={{paddingBottom: '0px'}} className=\"p1 project-card player-card\">\n                <Image  centered src={loading} size='small' style={{background:'rgba(255,255,255,0)', marginTop:'5rem'}} />\n                </Card>\n            </div>\n       </Grid.Column>\n       <Grid.Column>\n            <div>\n                <Card style={{paddingBottom: '0px' }} className=\"project-card player-card p2\">\n                <Image  centered src={loading} size='small' style={{background:'rgba(255,255,255,0)', marginTop:'5rem'}} />\n                </Card>\n            </div>\n       </Grid.Column>\n    </Grid.Row>\n</Grid>\n\n        <div class=\"bg\"></div>\n        <div class=\"bg bg2\"></div>\n        <div class=\"bg bg3\"></div>\n\n    </div>\n        )\n    }\n}\n","const apiUrl = \"https://projects-against-humanity.herokuapp.com/api\";\n export default apiUrl;\n\n// let apiUrl;\n// const expressPort = 5000;\n// const apiUrls = {\n//   production: `https://projects-against-humanity.herokuapp.com/api`,\n//   development: `http://localhost:${expressPort}/api`\n// };\n\n// if (window.location.hostname === 'localhost') {\n//   apiUrl = apiUrls.development;\n// } else {\n//   apiUrl = apiUrls.production;\n// }\n\n// export default apiUrl;","import axios from 'axios';\nimport apiUrl from '../../../apiConfig';\n\n// Players API calls\nexport const getAllPlayers = () => \n    axios({\n        method: 'GET',\n        url: `${apiUrl}/players`\n    })\nexport const getPlayer = (id) => \n    axios({\n        method: 'GET',\n        url: `${apiUrl}/players/${id}`\n    })\nexport const createPlayer = (player) => \n    axios.post( `${apiUrl}/players` , player)\n\nexport const updatePlayer = (id, body) => {\n   return axios.patch( `${apiUrl}/players/${id}` ,body)\n}\nexport const deletePlayer = (id) => \n    axios({\n        method: 'DESTROY',\n        url: `${apiUrl}/players/${id}`\n    })\n\n\n// Rooms API calls\n\n\nexport const getAllRooms = () => \n    axios({\n        method: 'GET',\n        url: `${apiUrl}/rooms`\n    })\nexport const getRoom = (id) => \n    axios({\n        method: 'GET',\n        url: `${apiUrl}/rooms/${id}`\n    })\nexport const createRoom = (room) => \n    axios.post( `${apiUrl}/rooms` , room)\n\n\nexport const deleteRoom = (id) => \n    axios({\n        method: 'DESTROY',\n        url: `${apiUrl}/rooms/${id}`\n    })\n\n","import React, { Component } from 'react'\nimport { Card, Grid, Image, Form } from 'semantic-ui-react'\nimport './ProjectManagerView.css'\nimport loading from './pencil.svg'\nimport {updatePlayer} from '../api'\n\nexport default class ProjectManagerView extends Component {\n    \n    state = {\n        approachField: \"\",\n        isSubmitted: false\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            approachField: event.target.value\n        })\n\n    }\n\n\n    approachSubmit = (value) => {\n        value.preventDefault();\n        const body = {approach: this.state.approachField};\n\n        updatePlayer(this.props.user._id , body).then( res => {\n            console.log(\"approach submit\",res)\n            this.props.socket.emit(\"submitApproach\" , this.props.room)\n        } );\nthis.setState({isSubmitted:true})\n\n    }\n\n\n\n\n\n    render() {\n       \n        return (\n            <div className='grid' style={{height:'90vh'}}>\n    <Grid>\n    <Grid.Row columns={3} style={{paddingBottom: '0px'}}>\n      <Grid.Column width={4}>\n            <div className='card-div'>\n                <Card className=\"project-card flip-vertical-right\">\n                    <div className=\"project-text text-flip\">{this.props.card.title}</div>\n                </Card>\n            </div>\n      </Grid.Column>\n      <Grid.Column width={9}>\n          <Grid.Row style={{textAlign:'center'}} columns={1} >\n          {this.props.investor && <h1>{this.props.investor.name}</h1>}\n      <h3 style={{color:'white'}}>Investor</h3>\n      </Grid.Row>\n      <Grid.Row columns={1} className='sentence-row' style={{textAlign:'center'}}>\n      <p className='fade-in-fwd sentence'>How would you approach this project?</p>\n      </Grid.Row>\n     </Grid.Column>\n    </Grid.Row>\n\n    <Grid.Row style={{paddingBottom: '0px', paddingTop: '0px', height:'8vh'}}>\n        <Grid.Column>\n            <div>\n            </div>  \n        </Grid.Column>\n\n    </Grid.Row>\n    <Grid.Row columns={2} style={{paddingBottom: '0px', paddingTop: '0px', height: '50vh'}}>\n        <Grid.Column>\n            <div>\n                <Card style={{paddingBottom: '0px'}} className=\"project-card player-card\">\n                {!this.state.isSubmitted &&\n                <Form> \n                    <Form.TextArea value={this.state.approachField} onChange={(e) => this.handleChange(e)} placeholder='How would you approach this project?' />\n                    <Form.Button onClick={this.approachSubmit}>Submit</Form.Button>\n                </Form>\n            }\n                {this.state.isSubmitted && \n                <div>{this.state.approachField}</div>\n                }\n                </Card>\n            </div>\n       </Grid.Column>\n\n       <Grid.Column>\n            <div>\n                <Card style={{paddingBottom: '0px'}} className=\"project-card player-card p2\">\n                <Image  centered src={loading} size='small' style={{background:'rgba(255,255,255,0)', marginTop:'5rem'}} />\n                </Card>\n            </div>\n       </Grid.Column>\n\n    </Grid.Row>\n\n        </Grid>\n\n        <div class=\"bg\"></div>\n        <div class=\"bg bg2\"></div>\n        <div class=\"bg bg3\"></div>\n\n    </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Image } from 'semantic-ui-react';\nimport './Waiting.css'\nimport dot from './dotdotdot.svg'\nimport './AnimatedBG.css'\n\nexport default class Waiting extends Component {\n    render() {\n      \n        return (\n            <div style={{height:'90vh'}}>\n            <div class=\"bg\"></div>\n            <div class=\"bg bg2\"></div>\n            <div class=\"bg bg3\"></div>\n            <div className=\"loading\">\n        \n    <p>Waiting for other players\n        <Image src={dot} size='small' style={{marginLeft:'23rem'}} />\n    <p>({this.props.room.players.length}/{this.props.room.limit})</p>    \n    </p>\n    </div>\n    </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './Disconnected.css'\n\nexport default class Disconnected extends Component {\n    render() {\n        return (\n            <div className=\"disconnect-text\">\n            <p>A User has left the game...</p>\n            <p>Returning to lobby</p>                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Card, Grid, Image } from 'semantic-ui-react'\nimport './InvestorView.css'\nimport './AnimatedBG.css'\n\nexport default class InvestorFinalPhase extends Component {\n\n    state = {\n        winner: \"\"\n    }\n\n\n    chooseWinner(winner) {\n        this.props.socket.emit(\"gameWinner\" , winner , this.props.room)\n\n    }\n\n\n\n    componentDidMount(){\n        this.props.socket.on(\"gameResult\" , (winner) => {\n\n            this.setState({\n                winner: `The winner is ${winner.name}!!!`\n            })\n\n        })\n    }\n\n\n\n    render() {\n        return (\n            <div>\n                <p>{this.state.winner}</p>\n    <Grid columns={3}>\n    <Grid.Row style={{paddingBottom: '0px'}}>\n      <Grid.Column>\n            <div className='card-div'>\n                <Card className=\"project-card flip-vertical-right\">\n                    <div className=\"project-text text-flip\">{this.props.card.title}</div>\n                </Card>\n            </div>\n      </Grid.Column>\n      <Grid.Column>\n      <Image centered style={{marginTop:'1rem'}} src='https://react.semantic-ui.com/images/wireframe/square-image.png' size='tiny' circular />\n      </Grid.Column>      \n    </Grid.Row>\n\n    <Grid.Row style={{paddingBottom: '0px', paddingTop: '0px'}}>\n        <Grid.Column>\n            <div style={{height:'8vh'}}>\n            </div>  \n        </Grid.Column>\n        <Grid.Column>\n            <p className='fade-in-fwd scale-out-center'>Phase 1</p>\n        </Grid.Column>\n    </Grid.Row>\n    <Grid.Row style={{paddingBottom: '0px', paddingTop: '0px', height:'9vh'}}>\n        <Grid.Column>\n            <div onClick={(winner) => this.chooseWinner(this.props.players[1])}>\n                <Card style={{paddingBottom: '0px'}} className=\"project-card player-card\">\n                <div>{this.props.players[1].approach}</div>\n                </Card>\n            </div>\n       </Grid.Column>\n       <Grid.Column>\n            <div>\n            </div>\n       </Grid.Column>\n       <Grid.Column>\n            <div onClick={(winner) => this.chooseWinner(this.props.players[0])}>\n                <Card style={{paddingBottom: '0px'}} className=\"project-card player-card p2\">\n                \n                <div>{this.props.players[0].approach}</div>\n                </Card>\n            </div>\n       </Grid.Column>\n\n    </Grid.Row>\n\n        </Grid>\n\n        <div class=\"bg\"></div>\n        <div class=\"bg bg2\"></div>\n        <div class=\"bg bg3\"></div>\n\n    </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Card, Grid, Image } from 'semantic-ui-react'\nimport './InvestorView.css'\nimport './AnimatedBG.css'\n\nexport default class ProjectManagerFinalView extends Component {\n\n\n\n    state = {\n        winner: \"\"\n    }\n\n\n    componentDidMount(){\n        this.props.socket.on(\"gameResult\" , (winner) => {\n\n            this.setState({\n                winner: `The winner is ${winner.name}!!!`\n            })\n\n        })\n    }\n\n\n    render() {\n        return (\n            <div>\n                <p>{this.state.winner}</p>\n\n    <Grid columns={3}>\n    <Grid.Row style={{paddingBottom: '0px'}}>\n      <Grid.Column>\n            <div className='card-div'>\n                <Card className=\"project-card flip-vertical-right\">\n                    <div className=\"project-text text-flip\">{this.props.card.title}</div>\n                </Card>\n            </div>\n      </Grid.Column>\n      <Grid.Column>\n      <Image centered style={{marginTop:'1rem'}} src='https://react.semantic-ui.com/images/wireframe/square-image.png' size='tiny' circular />\n      </Grid.Column>\n    </Grid.Row>\n    \n    <Grid.Row style={{paddingBottom: '0px', paddingTop: '0px'}}>\n        <Grid.Column>\n            <div style={{height:'8vh'}}>\n            </div>  \n        </Grid.Column>\n        <Grid.Column>\n            <p className='fade-in-fwd scale-out-center'>Phase 1</p>\n        </Grid.Column>\n    </Grid.Row>\n    <Grid.Row style={{paddingBottom: '0px', paddingTop: '0px', height:'9vh'}}>\n        <Grid.Column>\n            <div>\n                <Card style={{paddingBottom: '0px'}} className=\"project-card player-card\">\n                <p>{this.props.players[1].approach}</p>\n                </Card>\n            </div>\n       </Grid.Column>\n       <Grid.Column>\n            <div>\n            </div>\n       </Grid.Column>\n       <Grid.Column>\n            <div>\n                <Card style={{paddingBottom: '0px'}} className=\"project-card player-card p2\">\n                \n                <p>{this.props.players[0].approach}</p>\n                </Card>\n            </div>\n       </Grid.Column>\n\n    </Grid.Row>\n\n        </Grid>\n\n        <div class=\"bg\"></div>\n        <div class=\"bg bg2\"></div>\n        <div class=\"bg bg3\"></div>\n\n    </div>\n        )\n    }\n}\n//","import React, { Component } from 'react'\nimport Investor from './InvestorView'\nimport ProjectManager from './ProjectManagerView'\nimport './Game.css'\nimport Waiting from './Waiting';\nimport Disconnected from './Disconnected';\nimport InvestorFinalPhase from './InvestorFinalPhase';\nimport ProjectManagerFinalView from './ProjectManagerFinalView';\nimport { Button } from 'semantic-ui-react'\n\nexport default class Game extends Component {\n\n  state = {\n    currentCard: null,\n    currentComponent: 'waiting',\n    finalPhase: false,\n    playersInRoom: [],\n    investor: null\n  }\n//\n\n\n  \n\n\n  componentDidMount() {\n    \n\n    this.props.socket.on(\"updateCurrentRoom\", (roomID) => this.props.updateCurrentRoom(roomID));\n\n    this.props.socket.on(\"startGame\" , (card) => {\n      let currentUser = null;\n      this.props.room.players.forEach( (player) => {\n            if (player.role === 'inv'){\n              this.setState({\n                investor: player\n              })\n            }\n            console.log(\"the investor is :\" , player , \"???\")\n          \n          if (player._id === this.props.user._id)\n          currentUser = player\n            \n      })\n      console.log(\"currentUser is:\" , currentUser)\n \n      if (currentUser.role === \"inv\"){\n        this.setState({\n          currentCard: card,\n          currentComponent: 'investor'\n        })\n      }\n\n      else{\n        this.setState({\n          currentCard: card,\n          currentComponent: 'project manager'\n        })\n\n      }\n    \n    })\n\n    this.props.socket.on(\"finalPhase\" , (players) => {\n      this.setState({\n        playersInRoom: players,\n        finalPhase: true\n      })\n    })\n\n\n\n  }\n\n\n  render() {\n\n\n    \n    if (this.state.finalPhase) {\n      \n  if (this.state.currentComponent === 'investor') {\n    return <div>\n    <InvestorFinalPhase room={this.props.room} socket={this.props.socket} players={this.state.playersInRoom} card={this.state.currentCard}/>\n    <div style={{width:'100px', margin: '0px auto'}}>\n<Button color='yellow' style={{color:'black', marginTop:'1rem', marginRight: '1rem'}} className=\"exit-button ui fluid button\" onClick={this.props.exitGame}>EXIT GAME</Button>\n</div>\n\n  </div>\n  }\n  else{\n    return <div>\n       <ProjectManagerFinalView socket={this.props.socket} players={this.state.playersInRoom} card={this.state.currentCard}/>\n       <div style={{width:'100px', margin: '0px auto'}}>\n        <Button color='yellow' style={{color:'black', marginTop:'1rem', marginRight: '1rem'}} className=\"exit-button ui fluid button\" onClick={this.props.exitGame}>EXIT GAME</Button>\n        </div>\n     \n    </div>\n  }\n\n\n\n\n    }\nelse {\n\n  if (this.state.currentComponent === 'investor') {\n    return <div>\n        <Investor exitGame={this.props.exitGame} card={this.state.currentCard} room={this.props.room} updateRoom={this.props.updateRoom} socket={this.props.socket} />\n        <div style={{width:'100px', margin: '0px auto'}}>\n\n        <Button color='yellow' style={{color:'black', marginTop:'1rem', marginRight: '1rem'}} className=\"exit-button ui fluid button\" onClick={this.props.exitGame}>EXIT GAME</Button>\n        </div>\n      </div>\n    }\n    else if (this.state.currentComponent === 'project manager') {\n      return <div>\n        <ProjectManager investor={this.state.investor} exitGame={this.props.exitGame} card={this.state.currentCard} room={this.props.room} updateRoom={this.props.updateRoom} socket={this.props.socket} user={this.props.user}/>\n        <div style={{width:'100px', margin: '0px auto'}}>\n        <Button color='yellow' style={{color:'black', marginTop:'1rem', marginRight: '1rem'}} className=\"exit-button ui fluid button\" onClick={this.props.exitGame}>EXIT GAME</Button>\n        </div>\n     \n      </div>\n    }\n    \n    else if(this.state.currentComponent === 'waiting'){\n      return (\n              <>\n      <div>\n        <Waiting exitGame={this.props.exitGame} room={this.props.room}/>\n        </div>\n        <div>\n        <div style={{height:'100px', width:'100px', margin: '0px auto'}}>\n        <Button color='yellow' style={{color:'black', marginTop:'1rem', marginRight: '1rem'}} className=\"exit-button ui fluid button\" onClick={this.props.exitGame}>EXIT GAME</Button>\n        </div>\n        </div>\n    </>)\n}\nelse if (this.state.currentComponent === 'disconnected player'){\n  return <Disconnected />\n  \n}\n}\n}\n}\n","\nconst endpoint = \"http://localhost:5000/\";\n\nexport default endpoint;","import React, { Component } from 'react'\nimport RoomsList from './RoomsList'\nimport LobbyHeader from './LobbyHeader/LobbyHeader';\nimport UserName from './UserName';\nimport Game from './Game/Game';\nimport { Container, Grid } from 'semantic-ui-react';\nimport {\n    createPlayer,\n    updatePlayer,\n    getAllRooms,\n    getRoom,\n    createRoom,\n} from './api'\nimport socketIOClient from \"socket.io-client\";\nimport endpoint from '../../../socket';\nimport './Lobby.css';\nimport './Game/AnimatedBG.css'\n\nexport default class Lobby extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.userNameHandler = this.userNameHandler.bind(this)\n        this.socket = null;\n\n    }\n\n\n\n    state = {\n        rooms: [],\n        roomsToDisplay: [],\n        roomName: \"\",\n        user: null,\n        userName: '',\n        currentComponent: 'user', //this is initially setting the current component to username\n        role: true,\n        filterContent: \"\",\n        currentRoom: null\n\n    }\n\n    refreshRoom() {\n\n    }\n\n    getAllRoomsAPI = () => {\n        getAllRooms().then(res => {\n\n            const roomsStateArray = res.data.rooms;\n            this.setState({\n                rooms: roomsStateArray,\n                roomsToDisplay: roomsStateArray\n\n            }\n            )\n        })\n    }\n\n    componentWillMount() {\n        this.getAllRoomsAPI();\n    }\n\n\n    // A function to handle the room adding functionality\n    addRoom = (value) => {\n        value.preventDefault();\n        const newRoom = {\n            name: this.state.roomName,\n            players: [{ \"_id\": this.state.user._id }]\n\n        }\n\n        createRoom(newRoom).then(res => {\n            this.setState({\n                currentRoom: res.data.room,\n                currentComponent: \"game\",\n                roomName: \"\"\n            })\n            this.socket.emit(\"createNewRoom\", res.data.room._id)\n            this.getAllRoomsAPI();\n        })\n\n    }\n\n    initUser = (value) => {\n        value.preventDefault();\n\n        const newPlayer = { name: this.state.userName }\n\n        createPlayer(newPlayer).then(res => {\n            this.setState({ user: res.data.player });\n            this.socket = socketIOClient(endpoint, { query: `userId=${this.state.user._id}` });\n            // changing currentComponent to the room component\n            this.setState({\n                currentComponent: 'room'\n            });\n\n        });\n    }\n\n    userNameHandler = (e) => {\n        this.setState({\n\n            userName: e.target.value\n        })\n        console.log('*', this.state.userName)\n    }\n\n\n    // The function that changes the state to allow the user to type in the text field.\n    onChangeHandler = (e) => {\n        this.setState({\n            roomName: e.target.value\n        })\n        console.log(this.state.roomName);\n    }\n\n    //Changes the component to enter a room\n    enterRoom = (roomID) => {\n        console.log('room ID', roomID);\n        this.socket.emit(\"joinRoom\", { roomID: roomID, userID: this.state.user._id });\n\n        let joinedRoom = null;\n\n        //Checks if the player successfully joined the room \n        this.socket.on(\"playerJoinedRoom\", (receivedRoomId) => {\n\n            getRoom(roomID).then(res => {\n                joinedRoom = res.data.room;\n                console.log(\"join room function\", joinedRoom)\n                this.setState({\n                    currentComponent: 'game',\n                    currentRoom: joinedRoom\n\n                })\n            }).catch(err => {\n                console.log(err)\n            });\n        })\n\n\n\n        this.socket.on(\"playerFailedToJoin\", () => {\n            alert(\"Sorry, the game is full..\")\n        })\n\n\n    }\n\n//\n\n    exitGame = () => {\n\n\n        this.socket.emit(\"playerExitRoom\", { roomID: this.state.currentRoom._id, userID: this.state.user._id });\n\n\n        this.setState({\n            currentComponent: 'room',\n            currentRoom: null\n        })\n    }\n\n    roomsFilter = (e) => {\n        const newFilterValue = e.target.value;\n\n        this.setState((prevState, props) => {\n            const filteredRooms = prevState.rooms.filter(room => {\n                return room.name.toLowerCase().includes(newFilterValue.toLowerCase());\n            });\n            return {\n                filterContent: newFilterValue,\n                roomsToDisplay: filteredRooms\n            };\n        });\n\n\n    }\n\n    updateRoom = (roomID) => {\n        let joinedRoom = null;\n        getRoom(roomID).then(res => {\n            console.log(\"this is the update room again...\", res.data.room)\n            joinedRoom = res.data.room;\n            this.setState({\n                currentRoom: joinedRoom\n\n            })\n        }).catch(err => {\n            console.log(err)\n        });\n    }\n    \n    \n        updateCurrentRoom = (roomId) => {\n    \n            console.log(\"Update current room, for room: \", roomId)\n            getRoom(roomId).then(res => {\n                this.setState({\n                    currentRoom: res.data.room\n                });\n                const user = this.state.currentRoom.players.find((player) => {\n                    return player._id === this.state.user._id;\n                });\n                console.error(\"what is user: \", user)\n                \n                if (this.state.currentRoom.players.length === this.state.currentRoom.limit &&\n                    !user.ready) {\n                        console.error(user.name, \" is trying\")\n     \n                    updatePlayer(user._id, { ready: true }).then(res => {\n                        console.error(user.name, \" is ready\")\n                        this.socket.emit(\"playerIsReady\", this.state.currentRoom);\n                    });\n    \n                }\n            });\n    \n        }\n    render() {\n\n        const username = this.state.user && this.state.user.name\n        \n        // now we're checking which component to display based on currentComponent from state\n        if (this.state.currentComponent === 'user') {\n            return (<div>\n                <UserName userName={this.state.userName} onChange={this.userNameHandler} initUser={this.initUser} />\n            </div>)\n        } else if (this.state.currentComponent === 'room') {\n            return (\n                <Container center>\n                <div class=\"bg\"></div>\n                <div class=\"bg bg2\"></div>\n                <div class=\"bg bg3\"></div>\n                    <Grid textAlign='center' style={{ marginTop: '5rem', color: 'white', fontWeight: 'bold' ,marginBottom: '5rem', fontSize: '7rem', fontFamily: 'Amatic SC, bold'  }} verticalAlign='middle'>Welcome {username}! </Grid>\n                    <LobbyHeader roomName={this.state.roomName} onChangeAdd={this.onChangeHandler} addRoom={this.addRoom} onChangeFilter={this.roomsFilter} val={this.state.filterContent} />\n                    <RoomsList rooms={this.state.roomsToDisplay} enterRoom={this.enterRoom} socket={this.socket} getAllRoomsAPI={this.getAllRoomsAPI} />\n                </Container>              \n            )\n        }\n\n        \n        \n        else if (this.state.currentComponent === 'game') {\n            \n            return (<div>\n                <Game user={this.state.user} exitGame={this.exitGame} room={this.state.currentRoom} socket={this.socket} updateRoom={this.updateRoom} updateCurrentRoom={this.updateCurrentRoom} />\n            </div>\n            )\n        }\n    }\n}","import React, { Component } from 'react'\nimport './App.css';\nimport Lobby from './components/GameComponents/Lobby Components/Lobby'\n\n\nexport default class App extends Component {\n\n  render() {\n    return (\n      <Lobby />\n    );\n\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/pencil.6a09b69c.svg\";"],"sourceRoot":""}